[build-system]
requires = ["setuptools>=42", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "pyerrorschema"
version = "2.1.0"
license = {file = "LICENSE.txt"}
description = "Structured error handling framework for Python"
authors = [{name = "Elliot Su", email = "sodinfeliz@google.com"}]
requires-python = ">=3.8"
readme = "README.md"
classifiers = [
    'License :: OSI Approved :: BSD License',
    "Programming Language :: Python :: 3",
    'Programming Language :: Python :: 3 :: Only',
    'Programming Language :: Python :: 3.8',
    'Programming Language :: Python :: 3.9',
    'Programming Language :: Python :: 3.10',
    'Programming Language :: Python :: 3.11',
    'Programming Language :: Python :: 3.12',
    "Operating System :: OS Independent",
    "Framework :: Pydantic :: 2",
]
dependencies = [
    "pydantic>=2.6.4,<3.0.0"
]

[project.optional-dependencies]
dev = [
    "pytest>=8.3.4",
    "pytest-cov>=4.1.0",
    "ruff>=0.2.0",
    "mypy>=1.8.0",
    "build>=1.0.0",
    "twine>=4.0.0",
    "pre-commit>=3.5.0",
]

[project.urls]
Documentation = "https://github.com/sodinfeliz/PyErrorSchema#readme"
Issues = "https://github.com/sodinfeliz/PyErrorSchema/issues"
Source = "https://github.com/sodinfeliz/PyErrorSchema"

[tool.pytest.ini_options]
addopts = "--cov=pyerrorschema"
testpaths = [
    "tests"
]
minversion = "6.0"

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
exclude = [
    "venv/",
    "tests/"
]

[tool.ruff]
target-version = "py38"
line-length = 100
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "C",   # flake8-comprehensions
    "B",   # flake8-bugbear
    "UP",  # pyupgrade
    "N",   # pep8-naming
    "D",   # pydocstyle
]

ignore = [
    "E501",  # line too long, handled by black
    "E701",  # multiple statements on one line
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
    "W191",  # indentation contains tabs
    "C408",  # rewrite as a literal
    "D203",  # one-blank-line-before-class
    "D212",  # multi-line-summary-first-line
]

[tool.ruff.pydocstyle]
convention = "google"

[tool.ruff.isort]
known-third-party = ["fastapi", "pydantic", "starlette"]
